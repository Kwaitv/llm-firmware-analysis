
// WARNING: [rz-ghidra] Detected overlap for variable var_8ch
// WARNING: [rz-ghidra] Detected overlap for variable var_88h
// WARNING: [rz-ghidra] Detected overlap for variable var_80h

undefined8 main(undefined8 placeholder_0, undefined8 placeholder_1, char **envp)
{
    uint32_t uVar1;
    uint8_t uVar2;
    uint32_t uVar3;
    int32_t iVar4;
    uint32_t uVar5;
    int64_t iVar6;
    int64_t iVar7;
    uint32_t uVar8;
    uint32_t uVar9;
    uint32_t uVar10;
    uint32_t uVar11;
    uint32_t uVar12;
    int64_t *piVar13;
    uint32_t uVar14;
    uint32_t uVar15;
    int64_t iVar16;
    uint32_t uVar17;
    uint32_t uVar18;
    int64_t in_FS_OFFSET;
    int64_t var_a8h;
    int64_t var_a0h;
    int64_t var_90h;
    uint32_t var_88h;
    int64_t var_84h;
    int64_t var_7ch;
    int64_t canary;
    
    iVar4 = 0;
    uVar14 = 0x10325476;
    uVar10 = 0x98badcfe;
    uVar17 = 0x11111111;
    uVar5 = 0x67452301;
    uVar8 = 0x76543210;
    canary = *(int64_t *)(in_FS_OFFSET + 0x28);
    piVar13 = &var_90h;
    // [13] -r-x section size 969 named .text
    for (iVar7 = 0x14; iVar7 != 0; iVar7 = iVar7 + -1) {
        *(undefined4 *)piVar13 = 0;
        piVar13 = (int64_t *)((int64_t)piVar13 + 4);
    }
    var_a8h = 0;
    uVar3 = 0xefcdab89;
    do {
        uVar9 = uVar5 + (uint32_t)var_90h;
        uVar3 = uVar3 + var_90h._4_4_;
        uVar15 = uVar14 + (uint32_t)var_84h;
        uVar11 = uVar10 + var_88h;
        var_90h._0_4_ = uVar9;
        var_90h._4_4_ = uVar3;
        var_88h = uVar11;
        var_84h._0_4_ = uVar15;
        if (uVar8 == 0) {
            do {
                iVar4 = 10;
                uVar17 = *(uint32_t *)((int64_t)&var_90h + (uint64_t)(uVar8 >> 3) * 4) >>
                         ((uint8_t)((uVar8 & 7) << 2) ^ 4) & 0xf;
                if (uVar8 != 0x20) {
                    iVar4 = 0x30;
                    if (9 < uVar17) {
                        iVar4 = 0x57;
                    }
                    iVar4 = iVar4 + uVar17;
                }
                putchar(iVar4);
                uVar8 = uVar8 + 1;
            } while (uVar8 != 0x21);
            if (canary == *(int64_t *)(in_FS_OFFSET + 0x28)) {
                return 0;
            }
    // WARNING: Subroutine does not return
            __stack_chk_fail();
        }
        iVar7 = 0x40;
code_r0x000010ec:
        if (iVar7 != 8) {
            if (iVar7 == 0) goto code_r0x00001163;
            uVar5 = 0;
            if (-1 < iVar4) goto code_r0x0000110f;
code_r0x00001133:
            iVar7 = iVar7 + -1;
            uVar17 = uVar17 >> 8 | uVar5;
            *(uint32_t *)((int64_t)&var_84h + (iVar7 / 4) * 4 + 4) = uVar17;
            goto code_r0x000010ec;
        }
        var_7ch._0_4_ = (undefined4)var_a8h;
        var_84h._4_4_ = (int32_t)((uint64_t)var_a8h >> 0x20);
        if (-1 < iVar4) {
            uVar8 = 1;
code_r0x0000110f:
            iVar4 = getchar();
            uVar5 = 0x80000000;
            if (-1 < iVar4) {
                var_a8h = var_a8h + 8;
                uVar5 = iVar4 << 0x18;
            }
            goto code_r0x00001133;
        }
        uVar8 = 0;
code_r0x00001163:
        uVar18 = 0;
        iVar16 = 0;
        iVar7 = -0x10000000000;
        uVar17 = 0;
        uVar12 = 0;
        do {
            uVar10 = uVar3;
            uVar14 = uVar11;
            uVar5 = uVar15;
            iVar6 = (iVar16 * 0xfb50 + iVar7 * 0x8f091 >> 0x15) + iVar16 * 0x8a514 + iVar7 * 0xd76aa;
            iVar7 = (iVar7 * 0xfb50 + iVar16 * -0x8f091 >> 0x15) + iVar7 * 0x8a514 + iVar16 * -0xd76aa >> 0x14;
            iVar16 = iVar6 >> 0x14;
            if (uVar12 < 0x30) {
                if (uVar12 < 0x20) {
                    if (uVar12 < 0x10) {
                        uVar3 = (uVar14 ^ uVar5) & ~uVar10;
                    } else {
                        uVar3 = (uVar10 ^ uVar14) & uVar5;
                    }
                } else {
                    uVar3 = uVar10 ^ uVar5;
                }
            } else {
                uVar3 = ~uVar5 | uVar10;
            }
            uVar11 = uVar18 * 7;
            uVar15 = uVar18 * 5;
            uVar1 = uVar12 + 1;
            uVar18 = uVar1 >> 4;
            uVar9 = ((uint32_t)(iVar6 >> 0x3c) ^ (uint32_t)(iVar6 >> 0x1c)) +
                    *(int32_t *)
                     ((int64_t)&var_90h + (uint64_t)(0x13 - ((uVar11 >> 1 & 5) - ~(uVar15 & 6) * uVar12 & 0xf)) * 4) +
                    (uVar3 ^ uVar14) + uVar9;
            uVar2 = ((uint8_t)(((uint64_t)((uVar12 | 0xc) * 0x98) % 0x21f) % 0x52) & 3) + 4 +
                    (char)((uVar12 & 3) * 0x2b >> 3) & 0x1f;
            uVar3 = (uVar9 << uVar2 | uVar9 >> 0x20 - uVar2) + uVar10;
            uVar15 = uVar14;
            uVar11 = uVar10;
            uVar9 = uVar5;
            uVar12 = uVar1;
        } while (uVar1 != 0x40);
    } while( true );
}

